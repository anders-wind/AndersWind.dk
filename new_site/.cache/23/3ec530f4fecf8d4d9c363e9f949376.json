{"id":"Vpq1","dependencies":[{"name":"/Users/anders/Documents/AndersWind.dk/new_site/package.json","includedInParent":true,"mtime":1663525418985}],"generated":{"js":"module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\nuniform float gravity;\\nuniform float reach;\\nuniform int amtPresses;\\nuniform vec2 resolution;\\nuniform vec2 rotation;\\nuniform vec2 pitch; // number of grids\\nuniform vec3 presses[6];\\n\\nvec4 grid(float modX, float modY, float strength) {\\n\\tfloat density = 0.4 * (1.0 - abs((2.0-min(modX, modY))/2.0)); // grid alpa 0.5 and then anti alias.\\n\\treturn vec4(0.0, 0.0, 0.0, density*strength);\\n}\\n\\nvoid main() {\\n    float resLength = length(resolution);\\n\\n    vec2 pull = vec2(0.0, 0.0);\\n    float strength = 0.15;\\n    for(int i = 0; i<=6; i++){\\n        if (amtPresses==i)\\n            break;\\n        vec3 press = presses[i];\\n        vec2 delta = press.xy-gl_FragCoord.xy;\\n        float distance = length(delta);\\n        pull += delta * (gravity*press.z / (distance*distance + reach));\\n\\n        float fade = max(0.0, 0.9-distance/resLength); // 1.2 due to some scaling\\n        float dist = min(1.0, max(0.0, press.z));\\n        strength = max(strength, fade*dist);\\n    }\\n\\n    vec2 newPos = pitch + pull;\\n\\n    float modX = mod(reach + gl_FragCoord.x, newPos.x);\\n    float modY = mod(reach + gl_FragCoord.y, newPos.y);\\n\\n\\tgl_FragColor = grid(modX, modY, strength);\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[{"source":"glsl/2d-fragment-shader.glsl","name":"module","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"glsl/2d-fragment-shader.glsl","name":"exports","original":{"line":1,"column":7},"generated":{"line":1,"column":7}},{"source":"glsl/2d-fragment-shader.glsl","original":{"line":1,"column":15},"generated":{"line":1,"column":15}}],"sources":{"glsl/2d-fragment-shader.glsl":"module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\nuniform float gravity;\\nuniform float reach;\\nuniform int amtPresses;\\nuniform vec2 resolution;\\nuniform vec2 rotation;\\nuniform vec2 pitch; // number of grids\\nuniform vec3 presses[6];\\n\\nvec4 grid(float modX, float modY, float strength) {\\n\\tfloat density = 0.4 * (1.0 - abs((2.0-min(modX, modY))/2.0)); // grid alpa 0.5 and then anti alias.\\n\\treturn vec4(0.0, 0.0, 0.0, density*strength);\\n}\\n\\nvoid main() {\\n    float resLength = length(resolution);\\n\\n    vec2 pull = vec2(0.0, 0.0);\\n    float strength = 0.15;\\n    for(int i = 0; i<=6; i++){\\n        if (amtPresses==i)\\n            break;\\n        vec3 press = presses[i];\\n        vec2 delta = press.xy-gl_FragCoord.xy;\\n        float distance = length(delta);\\n        pull += delta * (gravity*press.z / (distance*distance + reach));\\n\\n        float fade = max(0.0, 0.9-distance/resLength); // 1.2 due to some scaling\\n        float dist = min(1.0, max(0.0, press.z));\\n        strength = max(strength, fade*dist);\\n    }\\n\\n    vec2 newPos = pitch + pull;\\n\\n    float modX = mod(reach + gl_FragCoord.x, newPos.x);\\n    float modY = mod(reach + gl_FragCoord.y, newPos.y);\\n\\n\\tgl_FragColor = grid(modX, modY, strength);\\n}\\n\";"},"lineCount":null}},"error":null,"hash":"b143c6a8f16529cab58a7b123ec0781a","cacheData":{"env":{}}}